servers:
  telnet:
    host: "0.0.0.0"
    port: 8023
    transport: "telnet"
    handler_class: "sample_servers.echo_server:EchoTelnetHandler"
    max_connections: 100
    connection_timeout: 300
    welcome_message: "Welcome to the Telnet Server! Negotiation will be attempted, with fallback if needed."

  tcp:
    host: "0.0.0.0"
    port: 8024
    transport: "tcp"
    handler_class: "sample_servers.echo_server:EchoTelnetHandler"
    max_connections: 100
    connection_timeout: 300
    welcome_message: "Welcome to the TCP Server! Simple linefeed mode is active."

  websocket:
    host: "0.0.0.0"
    port: 8025
    transport: "websocket"         # Regular WebSocket mode with proper handshake and text messaging
    ws_path: "/ws"
    handler_class: "sample_servers.echo_server:EchoTelnetHandler"
    use_ssl: false
    ssl_cert: ""
    ssl_key: ""
    allow_origins:
      - "*"
    ping_interval: 30
    ping_timeout: 10
    max_connections: 100
    connection_timeout: 300
    welcome_message: "Welcome to the WebSocket Server! Text messages will be handled over WS."
    # Monitoring configuration
    enable_monitoring: true
    monitor_path: "/monitor"

  ws_telnet:
    host: "0.0.0.0"
    port: 8026
    transport: "ws_telnet"         # WebSocket over Telnet: performs Telnet negotiation over the WS transport
    ws_path: "/ws_telnet"
    handler_class: "sample_servers.echo_server:EchoTelnetHandler"
    use_ssl: false
    ssl_cert: ""
    ssl_key: ""
    allow_origins:
      - "*"
    ping_interval: 30
    ping_timeout: 10
    max_connections: 100
    connection_timeout: 300
    welcome_message: "Welcome to the WebSocket Telnet Server! Negotiation will be attempted over WebSocket."
    # Monitoring configuration
    enable_monitoring: true
    monitor_path: "/monitor"